//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace M_Gwt.ServiceMobile {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceMobile.ServiceMobileSoap")]
    public interface ServiceMobileSoap {
        
        // CODEGEN: 消息 PushRequest 以后生成的消息协定具有标头
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Push", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        M_Gwt.ServiceMobile.PushResponse Push(M_Gwt.ServiceMobile.PushRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Push", ReplyAction="*")]
        System.Threading.Tasks.Task<M_Gwt.ServiceMobile.PushResponse> PushAsync(M_Gwt.ServiceMobile.PushRequest request);
        
        // CODEGEN: 消息 LoginRequest 以后生成的消息协定具有标头
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Login", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        M_Gwt.ServiceMobile.LoginResponse Login(M_Gwt.ServiceMobile.LoginRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Login", ReplyAction="*")]
        System.Threading.Tasks.Task<M_Gwt.ServiceMobile.LoginResponse> LoginAsync(M_Gwt.ServiceMobile.LoginRequest request);
        
        // CODEGEN: 消息 RegisterRequest 以后生成的消息协定具有标头
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Register", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        M_Gwt.ServiceMobile.RegisterResponse Register(M_Gwt.ServiceMobile.RegisterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Register", ReplyAction="*")]
        System.Threading.Tasks.Task<M_Gwt.ServiceMobile.RegisterResponse> RegisterAsync(M_Gwt.ServiceMobile.RegisterRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AuthHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string userNameField;
        
        private string passWordField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
                this.RaisePropertyChanged("UserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string PassWord {
            get {
                return this.passWordField;
            }
            set {
                this.passWordField = value;
                this.RaisePropertyChanged("PassWord");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PackageOfString : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool successField;
        
        private string exceptionField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
                this.RaisePropertyChanged("Success");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Exception {
            get {
                return this.exceptionField;
            }
            set {
                this.exceptionField = value;
                this.RaisePropertyChanged("Exception");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PackageOfBoolean : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool successField;
        
        private string exceptionField;
        
        private bool valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
                this.RaisePropertyChanged("Success");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Exception {
            get {
                return this.exceptionField;
            }
            set {
                this.exceptionField = value;
                this.RaisePropertyChanged("Exception");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Push", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PushRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public M_Gwt.ServiceMobile.AuthHeader AuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string receiverId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string senderId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string appName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string title;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string message;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string param;
        
        public PushRequest() {
        }
        
        public PushRequest(M_Gwt.ServiceMobile.AuthHeader AuthHeader, string receiverId, string senderId, string appName, string title, string message, string param) {
            this.AuthHeader = AuthHeader;
            this.receiverId = receiverId;
            this.senderId = senderId;
            this.appName = appName;
            this.title = title;
            this.message = message;
            this.param = param;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PushResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PushResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public M_Gwt.ServiceMobile.PackageOfBoolean PushResult;
        
        public PushResponse() {
        }
        
        public PushResponse(M_Gwt.ServiceMobile.PackageOfBoolean PushResult) {
            this.PushResult = PushResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Login", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class LoginRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public M_Gwt.ServiceMobile.AuthHeader AuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string account;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string appName;
        
        public LoginRequest() {
        }
        
        public LoginRequest(M_Gwt.ServiceMobile.AuthHeader AuthHeader, string account, string password, string appName) {
            this.AuthHeader = AuthHeader;
            this.account = account;
            this.password = password;
            this.appName = appName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoginResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class LoginResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public M_Gwt.ServiceMobile.PackageOfString LoginResult;
        
        public LoginResponse() {
        }
        
        public LoginResponse(M_Gwt.ServiceMobile.PackageOfString LoginResult) {
            this.LoginResult = LoginResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Register", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RegisterRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public M_Gwt.ServiceMobile.AuthHeader AuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string mobile;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string password1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string password2;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string appName;
        
        public RegisterRequest() {
        }
        
        public RegisterRequest(M_Gwt.ServiceMobile.AuthHeader AuthHeader, string mobile, string password1, string password2, string appName) {
            this.AuthHeader = AuthHeader;
            this.mobile = mobile;
            this.password1 = password1;
            this.password2 = password2;
            this.appName = appName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RegisterResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RegisterResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public M_Gwt.ServiceMobile.PackageOfString RegisterResult;
        
        public RegisterResponse() {
        }
        
        public RegisterResponse(M_Gwt.ServiceMobile.PackageOfString RegisterResult) {
            this.RegisterResult = RegisterResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ServiceMobileSoapChannel : M_Gwt.ServiceMobile.ServiceMobileSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceMobileSoapClient : System.ServiceModel.ClientBase<M_Gwt.ServiceMobile.ServiceMobileSoap>, M_Gwt.ServiceMobile.ServiceMobileSoap {
        
        public ServiceMobileSoapClient() {
        }
        
        public ServiceMobileSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceMobileSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceMobileSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceMobileSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        M_Gwt.ServiceMobile.PushResponse M_Gwt.ServiceMobile.ServiceMobileSoap.Push(M_Gwt.ServiceMobile.PushRequest request) {
            return base.Channel.Push(request);
        }
        
        public M_Gwt.ServiceMobile.PackageOfBoolean Push(M_Gwt.ServiceMobile.AuthHeader AuthHeader, string receiverId, string senderId, string appName, string title, string message, string param) {
            M_Gwt.ServiceMobile.PushRequest inValue = new M_Gwt.ServiceMobile.PushRequest();
            inValue.AuthHeader = AuthHeader;
            inValue.receiverId = receiverId;
            inValue.senderId = senderId;
            inValue.appName = appName;
            inValue.title = title;
            inValue.message = message;
            inValue.param = param;
            M_Gwt.ServiceMobile.PushResponse retVal = ((M_Gwt.ServiceMobile.ServiceMobileSoap)(this)).Push(inValue);
            return retVal.PushResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<M_Gwt.ServiceMobile.PushResponse> M_Gwt.ServiceMobile.ServiceMobileSoap.PushAsync(M_Gwt.ServiceMobile.PushRequest request) {
            return base.Channel.PushAsync(request);
        }
        
        public System.Threading.Tasks.Task<M_Gwt.ServiceMobile.PushResponse> PushAsync(M_Gwt.ServiceMobile.AuthHeader AuthHeader, string receiverId, string senderId, string appName, string title, string message, string param) {
            M_Gwt.ServiceMobile.PushRequest inValue = new M_Gwt.ServiceMobile.PushRequest();
            inValue.AuthHeader = AuthHeader;
            inValue.receiverId = receiverId;
            inValue.senderId = senderId;
            inValue.appName = appName;
            inValue.title = title;
            inValue.message = message;
            inValue.param = param;
            return ((M_Gwt.ServiceMobile.ServiceMobileSoap)(this)).PushAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        M_Gwt.ServiceMobile.LoginResponse M_Gwt.ServiceMobile.ServiceMobileSoap.Login(M_Gwt.ServiceMobile.LoginRequest request) {
            return base.Channel.Login(request);
        }
        
        public M_Gwt.ServiceMobile.PackageOfString Login(M_Gwt.ServiceMobile.AuthHeader AuthHeader, string account, string password, string appName) {
            M_Gwt.ServiceMobile.LoginRequest inValue = new M_Gwt.ServiceMobile.LoginRequest();
            inValue.AuthHeader = AuthHeader;
            inValue.account = account;
            inValue.password = password;
            inValue.appName = appName;
            M_Gwt.ServiceMobile.LoginResponse retVal = ((M_Gwt.ServiceMobile.ServiceMobileSoap)(this)).Login(inValue);
            return retVal.LoginResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<M_Gwt.ServiceMobile.LoginResponse> M_Gwt.ServiceMobile.ServiceMobileSoap.LoginAsync(M_Gwt.ServiceMobile.LoginRequest request) {
            return base.Channel.LoginAsync(request);
        }
        
        public System.Threading.Tasks.Task<M_Gwt.ServiceMobile.LoginResponse> LoginAsync(M_Gwt.ServiceMobile.AuthHeader AuthHeader, string account, string password, string appName) {
            M_Gwt.ServiceMobile.LoginRequest inValue = new M_Gwt.ServiceMobile.LoginRequest();
            inValue.AuthHeader = AuthHeader;
            inValue.account = account;
            inValue.password = password;
            inValue.appName = appName;
            return ((M_Gwt.ServiceMobile.ServiceMobileSoap)(this)).LoginAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        M_Gwt.ServiceMobile.RegisterResponse M_Gwt.ServiceMobile.ServiceMobileSoap.Register(M_Gwt.ServiceMobile.RegisterRequest request) {
            return base.Channel.Register(request);
        }
        
        public M_Gwt.ServiceMobile.PackageOfString Register(M_Gwt.ServiceMobile.AuthHeader AuthHeader, string mobile, string password1, string password2, string appName) {
            M_Gwt.ServiceMobile.RegisterRequest inValue = new M_Gwt.ServiceMobile.RegisterRequest();
            inValue.AuthHeader = AuthHeader;
            inValue.mobile = mobile;
            inValue.password1 = password1;
            inValue.password2 = password2;
            inValue.appName = appName;
            M_Gwt.ServiceMobile.RegisterResponse retVal = ((M_Gwt.ServiceMobile.ServiceMobileSoap)(this)).Register(inValue);
            return retVal.RegisterResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<M_Gwt.ServiceMobile.RegisterResponse> M_Gwt.ServiceMobile.ServiceMobileSoap.RegisterAsync(M_Gwt.ServiceMobile.RegisterRequest request) {
            return base.Channel.RegisterAsync(request);
        }
        
        public System.Threading.Tasks.Task<M_Gwt.ServiceMobile.RegisterResponse> RegisterAsync(M_Gwt.ServiceMobile.AuthHeader AuthHeader, string mobile, string password1, string password2, string appName) {
            M_Gwt.ServiceMobile.RegisterRequest inValue = new M_Gwt.ServiceMobile.RegisterRequest();
            inValue.AuthHeader = AuthHeader;
            inValue.mobile = mobile;
            inValue.password1 = password1;
            inValue.password2 = password2;
            inValue.appName = appName;
            return ((M_Gwt.ServiceMobile.ServiceMobileSoap)(this)).RegisterAsync(inValue);
        }
    }
}
